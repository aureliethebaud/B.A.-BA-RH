@model IEnumerable<BabaRh.Web.Models.ViewModel.QuestionVM>


@Html.Partial( "~/Views/Shared/_LayoutQuestionsManager.cshtml")

@{
    ViewBag.Title = "Index";
}

<div class="marginAfterLeftNavBar">

    <h2>Liste des questions</h2>
   

    <p>
        @Html.ActionLink("Ajouter nouvelle question", "Create", "Questions", new { @class = "btn btn-primary" })
    </p>



    @{
        List<int> modules = new List<int>();
        List<(int, List<int>)> modulesQuestions = new List<(int, List<int>)>();

        foreach (var question in Model)
        {
            if (!modules.Contains(question.Module.ModuleId))
            {
                modules.Add(question.Module.ModuleId);
            }
        }

        foreach (var module in modules)
        {
            List<int> questions = new List<int>();
            foreach (var question in Model)
            {
                if (module == question.Module.ModuleId)
                {
                    questions.Add(question.QuestionId);
                }
            }
            modulesQuestions.Add((module, questions));
        }
    }

    @foreach (var module in modules)
    {

        <h3>@Html.DisplayNameFor(model => model.Module) : <span class="module">@Model.FirstOrDefault(q => q.Module.ModuleId == module).Module.ModuleLib</span></h3>



        
            <table class="table">
                <tr>
                    <th scope="col">Niveau</th>
                    <th scope="col">Question ouverte ?</th>
                    <th scope="col">Intitulé de la question</th>
                    <th scope="col">Action</th>
                </tr>
                @foreach (var question in Model.Where(q => q.Module.ModuleId == module).OrderBy(q => q.Niveau.NiveauId))
                {
                    <tr>

                        <td class="niveauColumnLength">@question.Niveau.NiveauLib</td>
                        <td class="openQuestionColumnLength">@question.QuestionOuverte</td>
                        <td>@question.QuestionLib</td>
                        <td class="actionbuttonColumLength">
                            @Html.ActionLink("Détails", "Details", new { id = question.QuestionId }, new { @class = "btn btn-primary" })
                            @Html.ActionLink("Editer", "Edit", new { id = question.QuestionId }, new { @class = "btn btn-primary" })
                            @Html.ActionLink("Supprimer", "Delete", new { id = question.QuestionId }, new { @class = "btn btn-warning" })
                        </td>
                    </tr>
                }

            </table>
       

    }

</div>

<style>
    .marginAfterLeftNavBar
    {
        margin-left: 180px;
    }

    h3 {
        margin-top:40px;
    }
    
    th, td{        
        padding-right:20px;    

      
    }

    table{
        margin-left:20px;        
        margin-top:10px;                  
    }

    .actionbuttonColumLength {
        width: 250px;       
    }

    .module {
        color: #EB4C42;
    }

    .openQuestionColumnLength{
        width:90px;
    }

    .niveauColumnLength {
        width: 110px;
    }
    
</style>



